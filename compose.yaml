
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    container_name: patient_management_api
    volumes:
      - .:/usr/local/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - celery
    env_file:
      - .env
    develop:
      watch:
        - action: rebuild
          path: .

  db:
    image: postgres
    container_name: patient_management_db
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data


  redis:
    image: redis:alpine
    container_name: patient_management_redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A core worker -l info
    container_name: patient_management_celery
    volumes:
      - .:/usr/local/app
    depends_on:
      - redis
      - db
    env_file:
      - .env

volumes:
  pgdata:
